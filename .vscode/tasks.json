{
  "version": "2.0.0",
  "tasks": [
    // Build Tasks
    {
      "label": "Build: Docker Server",
      "type": "shell",
      "command": "docker-compose",
      "args": ["build", "whisper-service"],
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Build: All Docker Services",
      "type": "shell",
      "command": "docker-compose",
      "args": ["build"],
      "problemMatcher": [],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Build: Client Package",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pip.exe",
      "args": ["install", "-e", "client/"],
      "problemMatcher": [],
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // Run/Start Tasks
    {
      "label": "Run: Start Whisper Service",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "-d", "whisper-service"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run: Start All Services",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "-d"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run: Stop All Services",
      "type": "shell",
      "command": "docker-compose",
      "args": ["down"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run: Client",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/python.exe",
      "args": ["client/main.py"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "dependsOn": ["Run: Check Server Health"]
    },
    {
      "label": "Run: Server (Local)",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/python.exe",
      "args": ["server/main.py"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run (No Debug): Client",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/python.exe",
      "args": ["client/main.py"],
      "problemMatcher": [],
      "group": "run",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "dependsOn": ["Run: Check Server Health"]
    },
    {
      "label": "Run (No Debug): Server (Local)",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/python.exe",
      "args": ["server/main.py"],
      "problemMatcher": [],
      "group": "run",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run (No Debug): Server in Docker",
      "type": "shell",
      "command": "docker-compose",
      "args": ["up", "whisper-service"],
      "problemMatcher": [],
      "group": "run",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // Test Tasks
    {
      "label": "Test: Server Unit Tests",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pytest.exe",
      "args": ["tests/server", "-v"],
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Test: Client Unit Tests",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pytest.exe",
      "args": ["tests/client", "-v"],
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Test: All Tests",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pytest.exe",
      "args": ["tests/", "-v"],
      "problemMatcher": [],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Test: Coverage Report",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pytest.exe",
      "args": ["tests/", "--cov=server", "--cov=client", "--cov-report=html"],
      "problemMatcher": [],
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // Utility Tasks
    {
      "label": "Utility: Check Server Health",
      "type": "shell",
      "command": "curl",
      "args": ["-f", "http://localhost:8000/health"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Run: Check Server Health",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "& { Write-Host 'Checking server health...' -ForegroundColor Cyan; try { Invoke-WebRequest -Uri 'http://localhost:8000/health' -ErrorAction Stop | Out-Null; Write-Host 'Server is healthy!' -ForegroundColor Green } catch { Write-Host 'Server not running. Please start with: docker-compose up -d' -ForegroundColor Red } }"
      ],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "silent",
        "panel": "shared"
      }
    },
    {
      "label": "Utility: View Server Logs",
      "type": "shell",
      "command": "docker-compose",
      "args": ["logs", "-f", "whisper-service"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Utility: View Client Logs",
      "type": "shell",
      "command": "tail",
      "args": ["-f", "client/fnwispr_client.log"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Utility: Install Client Dependencies",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pip.exe",
      "args": ["install", "-r", "client/requirements.txt"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Utility: Install Server Dependencies",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/pip.exe",
      "args": ["install", "-r", "server/requirements.txt"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Utility: Clean Docker",
      "type": "shell",
      "command": "docker-compose",
      "args": ["down", "-v", "--remove-orphans"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Utility: List Available Models",
      "type": "shell",
      "command": "curl",
      "args": ["http://localhost:8000/models"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // Linting/Formatting Tasks
    {
      "label": "Lint: Black (Format)",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/black.exe",
      "args": ["client/", "server/"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Lint: Flake8",
      "type": "shell",
      "command": "${workspaceFolder}/venv/Scripts/flake8.exe",
      "args": ["client/", "server/"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Lint: All",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "& { Write-Host 'Running Black...' -ForegroundColor Cyan; & '${workspaceFolder}/venv/Scripts/black.exe' client/ server/; Write-Host 'Running Flake8...' -ForegroundColor Cyan; & '${workspaceFolder}/venv/Scripts/flake8.exe' client/ server/ }"
      ],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },

    // Development Workflow Tasks
    {
      "label": "Dev: Initialize Environment",
      "type": "shell",
      "command": "pwsh",
      "args": ["-NoProfile", "-ExecutionPolicy", "Bypass", "-File", "init.ps1"],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "isBackground": false
    },
    {
      "label": "Dev: Setup Project",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "& { & '${workspaceFolder}/venv/Scripts/pip.exe' install -r client/requirements.txt; & '${workspaceFolder}/venv/Scripts/pip.exe' install -r server/requirements.txt; docker-compose build; Write-Host 'Setup complete!' -ForegroundColor Green }"
      ],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      }
    },
    {
      "label": "Dev: Rebuild and Restart",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "& { docker-compose down; docker-compose build; docker-compose up -d }"
      ],
      "problemMatcher": [],
      "group": "none",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "dependsOrder": "sequence"
    }
  ]
}
