{
  // Python
  "python.defaultInterpreterPath": "${workspaceFolder}/venv/Scripts/python.exe",
  "python.terminal.activateEnvironment": true,
  "python.terminal.executeInFileDir": true,

  // Linting
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Args": [
    "--max-line-length=120",
    "--ignore=E203,W503"
  ],

  // Formatting
  "python.formatting.provider": "black",
  "python.formatting.blackArgs": [
    "--line-length=120"
  ],

  // Editor
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.organizeImports": "explicit"
  },
  "editor.rulers": [120],

  // Files
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.coverage": true,
    "**/htmlcov": true,
    "**/.eggs": true,
    "**/*.egg-info": true
  },
  "files.watcherExclude": {
    "**/__pycache__/**": true,
    "**/.pytest_cache/**": true,
    "**/.mypy_cache/**": true,
    "**/htmlcov/**": true
  },

  // Testing
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "tests"
  ],

  // Terminal
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    }
  },
  "terminal.integrated.defaultProfile.windows": "PowerShell",

  // Docker
  "docker.dockerPath": "docker",
  "docker.composeCommand": "docker-compose",

  // Git
  "git.ignoreLimitWarning": true,

  // Search
  "search.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/htmlcov": true,
    "**/node_modules": true,
    "**/.venv": true,
    "**/venv": true
  },

  // Trailing whitespace
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,

  // Language-specific
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.formatOnSave": false,
    "editor.wordWrap": "on"
  },
  "containers.containerCommand": "docker",
  "containers.composeCommand": "docker-compose",
  "postman.settings.dotenv-detection-notification-visibility": false
}
